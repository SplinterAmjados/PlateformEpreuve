security:
    encoders:
        Symfony\Component\Security\Core\User\User : plaintext
        Securinets\UsersBundle\Entity\User:
            algorithm:   sha512
            iterations: 1
            encode_as_base64: false

    role_hierarchy:
        ROLE_CHALLENGER:       ROLE_USER

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    amjed:  { password: amjed, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
            
        users_dataBase:
            entity : { class: SecurinetsUsersBundle:User, property : username}

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        main:
            pattern : ^/
            anonymous : true
            provider: users_dataBase
            form_login:
                check_path: /login_check
                login_path: /login
                always_use_default_target_path: true
                default_target_path: /home
                csrf_parameter:                 _csrf_token
                intention:                      authenticate
            logout :
                path: /logout
                target: /

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } #,requires_channel: https# }
        - { path: ^/getRules, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/score, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/challengerInfo, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/getRemaingTime, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/ , roles : ROLE_CHALLENGER }